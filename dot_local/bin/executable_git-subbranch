#!/usr/bin/env bash
#
# Extract a commit from the current branch into a new branch created
# from specified parent branch.
#
# Usage:
#  git-subbranch -b <new_branch> <start_point> <commit>...
#
# Options:
#   -b <new_branch>    The branch from which to create the new branch
#   <start_point>      The name to use for the newly-created branch
#   <commit>           SHA-1 hash of the git commit to cherry-pick
#
# @example
# git subbranch -b my-cool-feature develop a1d2f37

set -o errexit
set -o nounset
set -o pipefail

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly __dir
# required to add ./docopts to PATH
PATH="${PATH}:${__dir}"
# shellcheck source=./docopts.sh
source "${__dir}/docopts.sh" --auto "$@"
# shellcheck disable=SC2119
# docopt_print_ARGS

readonly start_point="${ARGS[<start_point>]}"
readonly new_branch="${ARGS[-b]}"

commit=""
i=0
while [[ $i -lt "${ARGS[<commit>,#]}" ]]; do
    commit="${commit} ${ARGS[<commit>,$i]}"
    i=$((i+1))
done

current_branch="$(git rev-parse --abbrev-ref HEAD)"
readonly current_branch

# echo "new_branch: ${new_branch}"
# echo "start_point: ${start_point}"
# echo "commit: ${commit}"

git checkout -b "${new_branch}" "${start_point}"
# shellcheck disable=SC2086
git cherry-pick ${commit}

git checkout "${current_branch}"
