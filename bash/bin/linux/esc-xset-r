#!/usr/bin/env bash
#
## @file
## @author Eric Crosson <esc@ericcrosson.com>
## @brief Set esc's custom Xorg keyboard repeat rate.
## @copyright WTFPLv2
## @version 1.0
#
#########
# License:
#
#             DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
#
# Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>
#
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
#
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
#
#  0. You just DO WHAT THE FUCK YOU WANT TO.
#
#########
#
## @details
## @par Custom settings
##
## This script will set the keyboard repeat rate to esc's preferred
## setting.
##
## @note This library will only modify keyboard settings in
## Xorg. Sorry Wayland users, you've beaten me to the punch.
##
## @par Usage
## Only script invocation matters; all arguments will be ignored.
#
## @defgroup XsetquickUsage

## @var initial_delay delay before user's kbd starts repeating depressed keys.
## @brief Internal use only.
## @details Initial delay before the user's keyboard repeats.
## @ingroup XsetquickUsage
declare -ri initial_delay=200

## @var repeat_delay delay before depressed keys count as repeated inputs.
## @brief Internal use only.
## @details Delay between repeated inputs while a key is depressed.
## @ingroup XsetquickUsage
declare -ri repeat_delay=60

# Execute getopt
ARGS=$(getopt -o h -l "help" -n "$0" -- "$@");

# Fail on bad arguments
if [ $? -ne 0 ]; then
    exit 1
fi

eval set -- "${ARGS}";

## @var HELP_ESC_XSET_R
## @brief Contains script invocation information
## @details Contains script invocation information and abstract.
## @ingroup XsetquickUsage
declare HELP_ESC_XSET_R
HELP_ESC_XSET_R=$(cat <<'EOF'
$0 : Set the xorg keyboard repeat rate to esc's favorite.

Usage : $0 [-h]

  -h : print this help menu

EOF
)

# Obey command line arguments
while true; do
    case "$1" in

	-h|--help)
	    echo -e "${HELP_ESC_XSET_R}"
	    exit
	    ;;

	--)
	    shift
	    break ;;
    esac
    shift
done

## @fn esc_xset_r()
## @brief Set the xset keyboard repeat rate based on values of
## @initial_delay and @repeat_delay.
## @retval 0 if success
## @retval 127 if command `xset' not found
## @ingroup XsetquickUsage
esc_xset_r() {

    xset r rate ${initial_delay} ${repeat_delay}
}

esc_xset_r
